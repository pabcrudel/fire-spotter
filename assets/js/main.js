import{fetchFirmsData,fetchOpenWeatherData,propagationAlgorithm}from"./wildfire-tracker.js";import{redIcon,map,drawLinesWithSecondaryLines}from"./map-builder.js";(async()=>{try{const rawCountries=await fetch("assets/js/countries.json"),country=(await rawCountries.json()).find((country=>"Spain"===country.name));if(void 0!==country){let points;map.setView(country.coordinates,5);const storedPoints=sessionStorage.getItem("points");if(null===storedPoints?(points=await fetchFirmsData(country.abbreviation),sessionStorage.setItem("points",JSON.stringify(points))):points=JSON.parse(storedPoints),void 0!==points.hotSpots&&points.hotSpots.length>0||void 0!==points.fires&&points.fires.length>0)for(const type in points){const pointsType=points[type];for(let i=0;i<pointsType.length;i++){const points=pointsType[i];for(let i=0;i<points.length;i++){const{latitude:latitude,longitude:longitude,hour:hour,source:source}=points[i];let weatherData;const key=`[${latitude},${longitude}]`,storedWeatherData=sessionStorage.getItem(key);null===storedWeatherData?(weatherData=await fetchOpenWeatherData(latitude,longitude),sessionStorage.setItem(key,JSON.stringify(weatherData))):weatherData=JSON.parse(storedWeatherData);const{windDeg:windDeg,windSpeed:windSpeed,windGust:windGust,temp:temp,humidity:humidity,nearbyCity:nearbyCity}=weatherData,firePropagation=propagationAlgorithm(temp,humidity,windDeg,windSpeed,hour),toolTip=`\n                <h4>${nearbyCity}</h4>\n                <hr>\n                <p>Source: ${source}</p>\n                <p>Prediction: ${type.replace(/(?:^|\s)./g,(match=>match.toUpperCase())).replace(/([A-Z])/g," $1")}</p>\n                <p><strong>Propagation: ${Math.round(firePropagation)} meters/hour</strong></p>\n              `;L.marker([latitude,longitude],{icon:redIcon}).addTo(map).bindTooltip(toolTip),drawLinesWithSecondaryLines(latitude,longitude,windDeg,firePropagation)}}}}}catch(error){}})();